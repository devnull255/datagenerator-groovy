/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
package datagenerator

import spock.lang.Specification

class DatageneratorTest extends Specification {
    List<String> firstNames = ['Michael', 'Paul', 'Amy', 'George', 'John', 'Thomas']
    List<String> lastNames = ['Mabin', 'Anderson', 'Washington', 'Jefferson', 'Adams', 'Simpson', 'Smithers',
       'Burns', 'Cartman', 'Bravlovski', 'Marsh']

    def "datagenerator has a greeting"() {
        setup:
        def dg = new Datagenerator()

        when:
        def result = dg.greeting

        then:
        result != null
    }
   
    def "datagenerator getFirstName returns what is in firstNames list"() {
        setup:
        def dg = new Datagenerator()

        when:
        def result = dg.getFirstName()
 
        then:
        firstNames.contains(result)
    }
    def "datagenerator getLastName returns a name from lastNames"() {
        setup:
        def dg = new Datagenerator()

        when:
        def result = dg.getLastName()
 
        then:
        lastNames.contains(result)
    }

    def "datagenerator nextInt returns an int in range"() {
        setup:
        def dg = new Datagenerator()

        when:
        def result = dg.nextInt(100)

        then:
        result >= 0 && result < 100
    }
    def "datagenerator digits returns a numeric string of n length"() {
        setup:
        def dg = new Datagenerator()

        when:
        def result = dg.digits(9)

        then:
        result.length() == 9
        result.isNumber()
    }

    def "datagenerator alpha returns an alpha string of n length"() {
        setup:
        def dg = new Datagenerator()
 
        when:
        def result = dg.alpha(8)
        
        then:
        result.length() == 8
        result.matches("[a-zA-Z]+")
    }
}
